{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rahul\\\\Documents\\\\GitHub\\\\Robo-project\\\\src\\\\App.js\";\nimport React from 'react';\nimport CardList from './CardList'; // import robots from './data';\n\nimport SearchBox from './SearchBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.onInputChange = async val => {\n      await this.setState({\n        searchField: val\n      });\n      console.log(this.state.searchField);\n    };\n\n    this.componentDidMount = () => {\n      console.log(\"Component Did Mount is running\");\n      fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => {\n        // console.log(users);\n        this.setState({\n          robots: users\n        });\n      });\n    };\n\n    this.state = {\n      robots: [],\n      searchField: ''\n    };\n    console.log('Constructor is running...');\n  }\n\n  render() {\n    console.log('Render is running...');\n    const {\n      robots,\n      searchField\n    } = this.state;\n    const filteredRobots = robots.filter(robot => {\n      return robot.name.toLowerCase().includes(searchField.toLowerCase());\n    });\n\n    if (!robots.length) {\n      // robots.length === 0  means we want to run\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Loading.... \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tc\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" RoboProject \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), \"  \", /*#__PURE__*/_jsxDEV(SearchBox, {\n        onInputChange: this.onInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(CardList, {\n        robots: filteredRobots\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 18\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/rahul/Documents/GitHub/Robo-project/src/App.js"],"names":["React","CardList","SearchBox","App","Component","constructor","onInputChange","val","setState","searchField","console","log","state","componentDidMount","fetch","then","response","json","users","robots","render","filteredRobots","filter","robot","name","toLowerCase","includes","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB,C,CACA;;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAKA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAE9BC,EAAAA,WAAW,GAAG;AACV;;AADU,SAYdC,aAZc,GAYE,MAAMC,GAAN,IAAc;AAC1B,YAAM,KAAKC,QAAL,CAAc;AAAEC,QAAAA,WAAW,EAAEF;AAAf,OAAd,CAAN;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWH,WAAvB;AACH,KAfa;;AAAA,SAmBdI,iBAnBc,GAmBM,MAAM;AAEtBH,MAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACAG,MAAAA,KAAK,CAAC,4CAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,KAAK,IAAI;AACX;AACA,aAAKV,QAAL,CAAc;AAAEW,UAAAA,MAAM,EAAED;AAAV,SAAd;AACH,OALL;AAMH,KA5Ba;;AAEV,SAAKN,KAAL,GAAa;AAETO,MAAAA,MAAM,EAAE,EAFC;AAGTV,MAAAA,WAAW,EAAE;AAHJ,KAAb;AAMAC,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACH;;AAsBDS,EAAAA,MAAM,GAAG;AACLV,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AAEA,UAAM;AAAEQ,MAAAA,MAAF;AAAUV,MAAAA;AAAV,QAA0B,KAAKG,KAArC;AAEA,UAAMS,cAAc,GAAGF,MAAM,CAACG,MAAP,CAAeC,KAAD,IAAW;AAC5C,aAAOA,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAkCjB,WAAW,CAACgB,WAAZ,EAAlC,CAAP;AACH,KAFsB,CAAvB;;AAIA,QAAI,CAACN,MAAM,CAACQ,MAAZ,EAAoB;AAAE;AAClB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AAED,wBAAS;AACD,MAAA,SAAS,EAAG,IADX;AAAA,8BAEL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFK,qBAGoB,QACzB,SADyB;AACf,QAAA,aAAa,EAAK,KAAKrB;AADR;AAAA;AAAA;AAAA;AAAA,cAHpB,eAOL,QACA,QADA;AACS,QAAA,MAAM,EAAKe;AADpB;AAAA;AAAA;AAAA;AAAA,cAPK;AAAA;AAAA;AAAA;AAAA;AAAA,YAAT;AAWH;;AAzD6B;;AA+DlC,eAAelB,GAAf","sourcesContent":["import React from 'react';\r\nimport CardList from './CardList';\r\n// import robots from './data';\r\nimport SearchBox from './SearchBox';\r\n\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n\r\n            robots: [],\r\n            searchField: '',\r\n        }\r\n\r\n        console.log('Constructor is running...')\r\n    }\r\n\r\n\r\n    onInputChange = async(val) => {\r\n        await this.setState({ searchField: val })\r\n        console.log(this.state.searchField);\r\n    }\r\n\r\n\r\n\r\n    componentDidMount = () => {\r\n\r\n        console.log(\"Component Did Mount is running\");\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => response.json())\r\n            .then(users => {\r\n                // console.log(users);\r\n                this.setState({ robots: users })\r\n            })\r\n    }\r\n\r\n\r\n    render() {\r\n        console.log('Render is running...');\r\n\r\n        const { robots, searchField } = this.state;\r\n\r\n        const filteredRobots = robots.filter((robot) => {\r\n            return robot.name.toLowerCase().includes(searchField.toLowerCase())\r\n        })\r\n\r\n        if (!robots.length) { // robots.length === 0  means we want to run\r\n            return <h1 > Loading.... < /h1>\r\n        }\r\n\r\n        return ( <\r\n            div className = \"tc\" >\r\n            <\r\n            h1 > RoboProject < /h1>  <\r\n            SearchBox onInputChange = { this.onInputChange }\r\n            /> \r\n\r\n            <\r\n            CardList robots = { filteredRobots }\r\n            /> </div >\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}